// Authentication utilities for managing login state
"use client";

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ login ‡∏à‡∏≤‡∏Å localStorage
export const checkLoginStatus = () => {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏ö‡∏ô client-side ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (typeof window === "undefined") {
      return false;
    }

    const loginStatus = localStorage.getItem("isLoggedIn");
    const loginTime = localStorage.getItem("loginTime");

    if (loginStatus === "true" && loginTime) {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ login ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
      const currentTime = new Date().getTime();
      const storedTime = parseInt(loginTime);
      const hoursPassed = (currentTime - storedTime) / (1000 * 60 * 60);

      if (hoursPassed < 24) {
        return true;
      } else {
        // ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å localStorage
        clearLoginStatus();
      }
    }
    return false;
  } catch (error) {
    console.error("Error checking login status:", error);
    return false;
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ login
export const saveLoginStatus = (email) => {
  try {
    if (typeof window === "undefined") {
      return;
    }

    localStorage.setItem("isLoggedIn", "true");
    localStorage.setItem("loginTime", new Date().getTime().toString());
    localStorage.setItem("userEmail", email);
    console.log("‚úÖ Login status saved for:", email);
  } catch (error) {
    console.error("Error saving login status:", error);
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ login
export const clearLoginStatus = () => {
  try {
    if (typeof window === "undefined") {
      return;
    }

    localStorage.removeItem("isLoggedIn");
    localStorage.removeItem("loginTime");
    localStorage.removeItem("userEmail");
    console.log("üóëÔ∏è Login status cleared");
  } catch (error) {
    console.error("Error clearing login status:", error);
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà
export const getLoggedInUser = () => {
  try {
    if (typeof window === "undefined") {
      return null;
    }

    const isLoggedIn = checkLoginStatus();
    if (isLoggedIn) {
      return localStorage.getItem("userEmail");
    }
    return null;
  } catch (error) {
    console.error("Error getting logged in user:", error);
    return null;
  }
};
